diff -purN a/nv_vulkan_wrapper.cpp b/nv_vulkan_wrapper.cpp
--- a/nv_vulkan_wrapper.cpp	2018-10-13 22:21:59.000000000 +0300
+++ b/nv_vulkan_wrapper.cpp	2018-10-13 22:50:57.225126172 +0300
@@ -22,16 +22,22 @@ public:
     glLibGL = dlopen("libGL.so.1", RTLD_GLOBAL | RTLD_NOW);
 
     nvDriver = dlopen("libGLX_nvidia.so.0", RTLD_LOCAL | RTLD_LAZY);
-    typedef void* (*dlsym_fn)(void *, const char*);
-    static dlsym_fn real_dlsym = (dlsym_fn) dlsym(dlopen("libdl.so.2", RTLD_LAZY), "dlsym");
-    instanceProcAddr = (decltype(instanceProcAddr)) real_dlsym(nvDriver, "vk_icdGetInstanceProcAddr");
-    phyProcAddr = (decltype(phyProcAddr)) real_dlsym(nvDriver, "vk_icdGetPhysicalDeviceProcAddr");
-    negotiateVersion = (decltype(negotiateVersion)) real_dlsym(nvDriver, "vk_icdNegotiateLoaderICDInterfaceVersion");
+    
+    if (nvDriver) {
+        typedef void* (*dlsym_fn)(void *, const char*);
+        static dlsym_fn real_dlsym = (dlsym_fn) dlsym(dlopen("libdl.so.2", RTLD_LAZY), "dlsym");
+        instanceProcAddr = (decltype(instanceProcAddr)) real_dlsym(nvDriver, "vk_icdGetInstanceProcAddr");
+        phyProcAddr = (decltype(phyProcAddr)) real_dlsym(nvDriver, "vk_icdGetPhysicalDeviceProcAddr");
+        negotiateVersion = (decltype(negotiateVersion)) real_dlsym(nvDriver, "vk_icdNegotiateLoaderICDInterfaceVersion");
+    }
   }
   ~StaticInitialize(){
-    dlclose(nvDriver);
+    if (nvDriver) dlclose(nvDriver);
     dlclose(glLibGL);
   }
+  bool IsInited(){
+    return nvDriver != nullptr;
+  }
 };
 
 StaticInitialize init;
@@ -39,17 +45,21 @@ StaticInitialize init;
 extern "C" VKAPI_ATTR PFN_vkVoidFunction VKAPI_CALL vk_icdGetInstanceProcAddr(
                                                VkInstance instance,
                                                const char* pName){
+  if (!init.IsInited()) return nullptr;
   auto res = init.instanceProcAddr(instance, pName);
   return res;
 }
 
 extern "C" VKAPI_ATTR PFN_vkVoidFunction vk_icdGetPhysicalDeviceProcAddr(VkInstance instance,
 						    const char* pName){
-  
+  if (!init.IsInited()) return nullptr;
   auto res = init.phyProcAddr(instance, pName);
   return res;
 }
 extern "C" VKAPI_ATTR VkResult VKAPI_CALL vk_icdNegotiateLoaderICDInterfaceVersion(uint32_t* pSupportedVersion){
+  if (!init.IsInited()) {
+    return VK_ERROR_INCOMPATIBLE_DRIVER;
+  }
   char *prev = getenv("DISPLAY");
   std::string old{prev};
   setenv("DISPLAY", ":8", 1);
